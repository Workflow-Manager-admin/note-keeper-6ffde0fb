{"is_source_file": true, "format": "Kotlin", "description": "This file defines the NotesRepository class responsible for managing CRUD operations and search functionality for notes via HTTP requests to a backend API, using Ktor client with JSON serialization. It interacts with a notes table in a remote database and provides methods for getting, adding, updating, deleting, and searching notes.", "external_files": ["kotlinx.coroutines.Dispatchers", "kotlinx.coroutines.withContext", "io.ktor.client.*", "io.ktor.client.engine.cio.*", "io.ktor.client.request.*", "io.ktor.client.statement.*", "io.ktor.client.plugins.contentnegotiation.*", "io.ktor.serialization.kotlinx.json.*", "io.ktor.client.plugins.logging.*", "io.ktor.http.*", "kotlinx.serialization.builtins.ListSerializer", "kotlinx.serialization.json.Json", "kotlinx.serialization.json.buildJsonObject", "kotlinx.serialization.json.put"], "external_methods": ["Json.decodeFromString", "HttpResponse.bodyAsText", "HttpClient.get", "HttpClient.post", "HttpClient.patch", "HttpClient.delete"], "published": ["NotesRepository"], "classes": [{"name": "NotesRepository", "description": "Repository class for notes, providing methods for CRUD operations and searching notes in a remote database via HTTP API."}], "methods": [{"name": "getNotes", "description": "Fetches all notes from the backend, ordered by id descending."}, {"name": "addNote", "description": "Adds a new note with the specified title and content, returning the created Note object."}, {"name": "updateNote", "description": "Updates an existing note identified by id with new title and content, returning a boolean success flag."}, {"name": "deleteNote", "description": "Deletes a note by id, returns true if deletion was successful."}, {"name": "searchNotes", "description": "Searches notes' title and content fields with a search string, returning matching notes."}, {"name": "notesTableUrl", "description": "Constructs the URL for accessing the notes table in the backend."}, {"name": "baseHeaders", "description": "Constructs the base headers including API key and authorization token."}], "calls": ["Json.decodeFromString", "HttpResponse.bodyAsText", "httpClient.get", "httpClient.post", "httpClient.patch", "httpClient.delete"], "search-terms": ["NotesRepository", "HTTP client", "JSON serialization", "supabase", "notes management", "kotlin coroutine", "Ktor", "CRUD"], "state": 2, "file_id": 31, "knowledge_revision": 89, "git_revision": "", "revision_history": [{"64": ""}, {"70": ""}, {"82": ""}, {"85": ""}, {"86": ""}, {"89": ""}], "hash": "305506f4b9434c2265679554d1a079a4", "format-version": 4, "code-base-name": "frontend_notes_app", "filename": "frontend_notes_app/app/src/main/java/com/example/frontendnotesapp/data/NotesRepository.kt"}